import org.apache.commons.io.FileUtils
import java.net.URL

plugins {
    id 'org.openapi.generator' version '7.0.0'
    id 'java'
    id 'maven-publish' // Add this line to enable the publishing functionality
}

group = 'org.mylibraries'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'commons-io:commons-io:2.8.0'

    // Add Spring dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web:3.3.4' // Use appropriate version
    implementation 'org.springframework:spring-context:5.3.27'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

// Download the Swagger json file
task downloadSwaggerSpec {
    doLast {
        def swaggerUrl = new URL("https://petstore.swagger.io/v2/swagger.json")
        def outputFile = file("${buildDir}/swagger/swagger.json")
        outputFile.parentFile.mkdirs() // Create directory if it doesn't exist
        FileUtils.copyURLToFile(swaggerUrl, outputFile)
    }
}

// Configure the auto generation based on the of the Swagger json file
openApiGenerate {
    generatorName = "java"
    inputSpec = "${buildDir}/swagger/swagger.json" // Use the downloaded file
    outputDir = "$buildDir/generated"
    apiPackage = "com.example.client.api"
    modelPackage = "com.example.client.model"
    configOptions = [
            library: "resttemplate"
    ]
}

// Log the successful run of the automatic generation of code
tasks.register("compileGeneratedCode") {
    dependsOn tasks.named("openApiGenerate")
    doLast {
        println "Generated code compiled successfully."
    }
}

// Make openApiGenerate dependent on downloadSwaggerSpec
tasks.named("openApiGenerate") {
    dependsOn downloadSwaggerSpec
}

// Ensure source sets include generated code
sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/src/main/java"
        }
    }
}

// Ensure openApiGenerate runs before compiling the generated code
tasks.named("compileJava") {
    dependsOn tasks.named("openApiGenerate")
}

jar {
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    archiveBaseName.set("petstore-api-client")
    archiveVersion.set("1.0.0")

    // Set the duplicates strategy to exclude duplicate files
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = "localRepo"
            url = uri("file://${buildDir}/repo")
        }
    }
}

test {
    useJUnitPlatform()
}